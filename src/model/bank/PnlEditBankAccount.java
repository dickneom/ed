/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package model.bank;

import console.DknConsole;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import system.config.AppGlobal;
import system.edit.PnlEdit;
import system.edit.WEdit;
import system.type.Type;
import system.type.TypeDAO;
import system.type.Types;

/**
 *
 * @author DickNeoM
 */
public class PnlEditBankAccount extends PnlEdit {

    private final WEdit wEdit;
    private final int id;

    /**
     * Creates new form PnlEditBank
     * @param wEdit
     * @param id
     */
    public PnlEditBankAccount(WEdit wEdit, int id) {
        initComponents();
        this.wEdit = wEdit;
        this.id = id;
        
        init();
        
        loadData();
    }
    
    @Override
    protected final void init() {
        lblCode.setText(AppGlobal.getText("WEDIT_BANKACCOUNTS_CODE_TEXT") + ":");
        lblBank.setText(AppGlobal.getText("WEDIT_BANKACCOUNTS_NAME_TEXT") + ":");
        lblType.setText(AppGlobal.getText("WEDIT_BANKACCOUNTS_TYPE_TEXT") + ":");
        lblNumber.setText(AppGlobal.getText("WEDIT_BANKACCOUNTS_NUMBER_TEXT") + ":");
        chkActive.setText(AppGlobal.getText("WEDIT_BANKACCOUNTS_ACTIVE_TEXT"));
        
        cmbBank.removeAllItems();
        Types banks = null;
        try {
            banks = TypeDAO.gets("banks", "name");
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(PnlEditBankAccount.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (Type b : banks) {
            cmbBank.addItem(b.getName());
        }
        
        cmbType.removeAllItems();
        Types types = null;
        try {
            types = TypeDAO.gets("bankaccounttypes", "name");
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(PnlEditBankAccount.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (Type t : types) {
            cmbType.addItem(t.getName());
        }
        
        btnOk.setText(AppGlobal.getText("WEDIT_BTN_OK"));
        btnCancel.setText(AppGlobal.getText("WEDIT_BTN_CANCEL"));
    }
    
    @Override
    protected final void loadData() {
        lblId.setText(String.valueOf(id));
        if (id < 1) {
            txtCode.setText("");
            txtNumber.setText("");
            chkActive.setSelected(true);
        }
        else {
            BankAccount bankAccount = null;
            try {
                bankAccount = BankAccountDAO.get(id);
            } catch (ClassNotFoundException | SQLException ex) {
                DknConsole.error(Thread.currentThread().getStackTrace()[1].toString(), " ERROR. Cuenta bancaria no encontrada. ID: " + id);
                Logger.getLogger(PnlEditBankAccount.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            if (bankAccount != null) {
                txtCode.setText(bankAccount.getCode());
                txtNumber.setText(bankAccount.getNumber());
                chkActive.setSelected(bankAccount.isActive());

                Type bank;
                try {
                    bank = TypeDAO.get("banks", bankAccount.getIdBank());
                    cmbBank.setSelectedItem(bank.getName());
                } catch (ClassNotFoundException | SQLException ex) {
                    DknConsole.error(Thread.currentThread().getStackTrace()[1].toString(), " ERROR. Banco no encontrado. ID: " + bankAccount.getIdBank());
                    Logger.getLogger(PnlEditBankAccount.class.getName()).log(Level.SEVERE, null, ex);
                }


                Type type;
                try {
                    type = TypeDAO.get("bankaccounttypes", bankAccount.getIdType());

                    cmbType.setSelectedItem(type.getName());
                } catch (ClassNotFoundException | SQLException ex) {
                    DknConsole.error(Thread.currentThread().getStackTrace()[1].toString(), " ERROR. Tipo de cuenta no encontrado no encontrado. ID: " + bankAccount.getIdType());
                    Logger.getLogger(PnlEditBankAccount.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }

    
    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnCancel = new javax.swing.JButton();
        btnOk = new javax.swing.JButton();
        lblCode = new javax.swing.JLabel();
        txtCode = new javax.swing.JTextField();
        lblId = new javax.swing.JLabel();
        lblBank = new javax.swing.JLabel();
        lblNumber = new javax.swing.JLabel();
        txtNumber = new javax.swing.JTextField();
        chkActive = new javax.swing.JCheckBox();
        lblType = new javax.swing.JLabel();
        cmbBank = new javax.swing.JComboBox<>();
        cmbType = new javax.swing.JComboBox<>();

        btnCancel.setText("jButton1");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnOk.setText("jButton2");
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });

        lblCode.setText("jLabel1");

        txtCode.setText("jTextField1");

        lblId.setText("jLabel2");

        lblBank.setText("jLabel3");

        lblNumber.setText("jLabel4");

        txtNumber.setText("jTextField3");

        chkActive.setText("jCheckBox1");

        lblType.setText("jLabel1");

        cmbBank.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cmbType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 173, Short.MAX_VALUE)
                        .addComponent(btnOk)
                        .addGap(18, 18, 18)
                        .addComponent(btnCancel))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(lblCode)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCode))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(lblBank)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbBank, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblType)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(lblNumber)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chkActive, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblId, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lblBank, lblCode, lblNumber, lblType});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCode)
                    .addComponent(txtCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblId))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBank)
                    .addComponent(chkActive)
                    .addComponent(cmbBank, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblType)
                    .addComponent(cmbType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNumber)
                    .addComponent(txtNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancel)
                    .addComponent(btnOk))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
        save();
        
        if (rowsAffected > 0) {
            this.ok = true;
            wEdit.dispose();
        }
    }//GEN-LAST:event_btnOkActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        this.ok = false;
        
        wEdit.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnOk;
    private javax.swing.JCheckBox chkActive;
    private javax.swing.JComboBox<String> cmbBank;
    private javax.swing.JComboBox<String> cmbType;
    private javax.swing.JLabel lblBank;
    private javax.swing.JLabel lblCode;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblNumber;
    private javax.swing.JLabel lblType;
    private javax.swing.JTextField txtCode;
    private javax.swing.JTextField txtNumber;
    // End of variables declaration//GEN-END:variables

    @Override
    protected void save() {
        BankAccount bankAccount = new BankAccount();
        
        bankAccount.setId(id);
        bankAccount.setCode(txtCode.getText());
        bankAccount.setName(bankAccount.getCode());
        
        String bankStr = (String) cmbBank.getSelectedItem();
        Type bank = null;
        try {
            bank = TypeDAO.get("banks", "name", bankStr);
            if (bank != null) {
                bankAccount.setIdBank(bank.getId());
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(PnlEditBankAccount.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        String typeStr = (String) cmbType.getSelectedItem();
        Type type = null;
        try {
            type = TypeDAO.get("bankaccounttypes", "name", typeStr);
            if (type != null) {
               bankAccount.setIdType(type.getId());
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(PnlEditBankAccount.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        bankAccount.setNumber(txtNumber.getText());
        bankAccount.setActive(chkActive.isSelected());
        
        String error = BankAccountDAO.validate(bankAccount);
        
        if (error == null) {
            try {
                rowsAffected = BankAccountDAO.update(bankAccount);
            } catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(PnlEditBankAccount.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    @Override
    protected void showData() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
