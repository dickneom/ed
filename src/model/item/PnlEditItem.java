/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package model.item;

import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import system.config.AppGlobal;
import system.edit.PnlEdit;
import system.edit.WEdit;
import system.type.Type;
import system.type.TypeDAO;
import system.type.Types;

/**
 *
 * @author richneom
 */
public class PnlEditItem extends PnlEdit {

    private final WEdit wEdit;
    private final int id;

    /**
     * Creates new form PnlEditLocalType
     * @param wEdit
     * @param id
     */
    public PnlEditItem(WEdit wEdit, int id) {
        initComponents();
        this.wEdit = wEdit;
        this.id = id;
        
        init();
        
        loadData();
    }
    
    @Override
    protected final void init() {
        lblCode.setText(AppGlobal.getText("WEDIT_ITEMS_LBL_CODE_TEXT") + ":");
        lblName.setText(AppGlobal.getText("WEDIT_ITEMS_LBL_NAME_TEXT") + ":");
        lblBarCode.setText(AppGlobal.getText("WEDIT_ITEMS_LBL_BARCODE_TEXT") + ":");
        lblStock.setText(AppGlobal.getText("WEDIT_ITEMS_LBL_STOCK_TEXT") + ":");
        lblCost.setText(AppGlobal.getText("WEDIT_ITEMS_LBL_COST_TEXT") + ":");
        lblPrice.setText(AppGlobal.getText("WEDIT_ITEMS_LBL_PRICE_TEXT") + ":");
        lblUtility.setText(AppGlobal.getText("WEDIT_ITEMS_LBL_UTILITY_TEXT") + ":");
        lblIdType.setText(AppGlobal.getText("WEDIT_ITEMS_LBL_IDTYPE_TEXT") + ":");
        lblObservations.setText(AppGlobal.getText("WEDIT_ITEMS_LBL_OBSERVATIONS_TEXT") + ":");
        chkActive.setText(AppGlobal.getText("WEDIT_ITEMS_CHK_ACTIVE_TEXT"));
        
        cmbIdType.removeAllItems();
        Types types = null;
        try {
            types = TypeDAO.gets("itemstypes", "name");
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(PnlEditItem.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (Type it : types) {
            cmbIdType.addItem(it.getName());
        }
        
        btnOk.setText(AppGlobal.getText("WEDIT_BTN_OK"));
        btnCancel.setText(AppGlobal.getText("WEDIT_BTN_CANCEL"));
    }
    
    @Override
    protected final void loadData() {
        lblId.setText(String.valueOf(id));
        if (id < 1) {
            txtCode.setText("");
            txtName.setText("");
            txtBarCode.setText("");
            txtStock.setText("0.00");
            txtCost.setText("0.00");
            txtPrice.setText("0.00");
            txtUtility.setText("0.00");
            
            txtObservations.setText("");
            chkActive.setSelected(true);
        }
        else {
            try {
                Item item = ItemDAO.get(id);
                
                txtCode.setText(item.getCode());
                txtName.setText(item.getName());
                txtBarCode.setText(item.getBarcode());
                
                txtStock.setText(String.valueOf(item.getStock()));
                txtCost.setText(String.valueOf(item.getCost()));
                txtPrice.setText(String.valueOf(item.getPrice()));
                txtUtility.setText(String.valueOf(item.getUtility()));
                
                Type type = TypeDAO.get("itemstypes", item.getIdType());
                if (type != null) {
                    cmbIdType.setSelectedItem(type.getName());
                }
                
                txtObservations.setText(item.getObservations());
                chkActive.setSelected(item.isActive());
            } catch (ClassNotFoundException | SQLException ex) {
                System.out.println("ERROR. PnlEditItem.loadData(). No se encontrol el Item. ID: " + id);
                Logger.getLogger(PnlEditItem.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    
    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnCancel = new javax.swing.JButton();
        btnOk = new javax.swing.JButton();
        lblCode = new javax.swing.JLabel();
        txtCode = new javax.swing.JTextField();
        lblId = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        lblBarCode = new javax.swing.JLabel();
        txtBarCode = new javax.swing.JTextField();
        lblCost = new javax.swing.JLabel();
        txtCost = new javax.swing.JTextField();
        lblPrice = new javax.swing.JLabel();
        txtPrice = new javax.swing.JTextField();
        lblUtility = new javax.swing.JLabel();
        lblIdType = new javax.swing.JLabel();
        cmbIdType = new javax.swing.JComboBox<>();
        lblObservations = new javax.swing.JLabel();
        txtObservations = new javax.swing.JTextField();
        chkActive = new javax.swing.JCheckBox();
        txtUtility = new javax.swing.JTextField();
        lblStock = new javax.swing.JLabel();
        txtStock = new javax.swing.JTextField();

        btnCancel.setText("jButton1");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnOk.setText("jButton2");
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });

        lblCode.setText("jLabel1");

        txtCode.setText("jTextField1");

        lblId.setText("jLabel2");

        lblName.setText("jLabel3");

        txtName.setText("jTextField2");

        lblBarCode.setText("jLabel4");

        txtBarCode.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        txtBarCode.setText("jTextField3");

        lblCost.setText("jLabel1");

        txtCost.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        txtCost.setText("jTextField1");

        lblPrice.setText("jLabel1");

        txtPrice.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        txtPrice.setText("jTextField1");

        lblUtility.setText("jLabel2");

        lblIdType.setText("jLabel2");

        cmbIdType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lblObservations.setText("jLabel2");

        txtObservations.setText("jTextField1");

        chkActive.setText("jCheckBox1");

        txtUtility.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        txtUtility.setText("jTextField1");

        lblStock.setText("jLabel1");

        txtStock.setText("jTextField1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnOk)
                        .addGap(18, 18, 18)
                        .addComponent(btnCancel))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(lblCode)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCode))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblName)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblId, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(chkActive, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblObservations)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtObservations))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblIdType)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbIdType, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(lblBarCode)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtBarCode))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(lblUtility)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtUtility))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(lblCost)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtCost, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(lblPrice)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtPrice)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblStock)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtStock, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 81, Short.MAX_VALUE)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lblBarCode, lblCode, lblCost, lblIdType, lblName, lblPrice, lblUtility});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCode)
                    .addComponent(txtCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblId))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblName)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkActive))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBarCode)
                    .addComponent(txtBarCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCost)
                    .addComponent(txtCost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblStock)
                    .addComponent(txtStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPrice)
                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUtility)
                    .addComponent(txtUtility, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblIdType)
                    .addComponent(cmbIdType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblObservations)
                    .addComponent(txtObservations, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancel)
                    .addComponent(btnOk))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
        save();
        
        if (rowsAffected > 0) {
            this.ok = true;
            wEdit.dispose();
        }
    }//GEN-LAST:event_btnOkActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        this.ok = false;
        
        wEdit.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnOk;
    private javax.swing.JCheckBox chkActive;
    private javax.swing.JComboBox<String> cmbIdType;
    private javax.swing.JLabel lblBarCode;
    private javax.swing.JLabel lblCode;
    private javax.swing.JLabel lblCost;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblIdType;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblObservations;
    private javax.swing.JLabel lblPrice;
    private javax.swing.JLabel lblStock;
    private javax.swing.JLabel lblUtility;
    private javax.swing.JTextField txtBarCode;
    private javax.swing.JTextField txtCode;
    private javax.swing.JTextField txtCost;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtObservations;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtStock;
    private javax.swing.JTextField txtUtility;
    // End of variables declaration//GEN-END:variables

    @Override
    protected void save() {
        Item item = new Item();
        
        item.setId(id);
        
        item.setCode(txtCode.getText());
        item.setName(txtName.getText());
        item.setBarcode(txtBarCode.getText());
        
        item.setStock(Double.parseDouble(txtStock.getText()));
        item.setCost(Double.parseDouble(txtCost.getText()));
        item.setPrice(Double.parseDouble(txtPrice.getText()));
        item.setUtility(Double.parseDouble(txtUtility.getText()));
        
        item.setObservations(txtObservations.getText());
        item.setActive(chkActive.isSelected());
        
        String typeStr = (String) cmbIdType.getSelectedItem();
        Type type = null;
        try {
            type = TypeDAO.get("itemstypes", "name", typeStr);
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(PnlEditItem.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (type != null) {
            item.setIdType(type.getId());
        }
        
        String error = ItemDAO.validate(item);
        
        if (error == null) {
            try {
                rowsAffected = ItemDAO.update(item);
            } catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(PnlEditItem.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    @Override
    protected void showData() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
